소켓
ㅡ> 클라이언트 프로세스와 서버 프로세스간의 통신을 위해, OS가 제공하는 일종의 API
ㅡ> 어플리케이션 계층 밑의 계층들이 OS 내부에 구현되어 있음
ㅡ> OS가 제공하는 Transport계층 : TCP/UDP 
ㅡ> TCP를 하고싶으면 TCP와 연결된 소켓을 이용, UDP는 UDP와 연결된 소켓을 이용
ㅡ> 즉, 소켓은 어플리케이션 계층과 OS 사이의 인터페이스

TCP
ㅡ> SOCK_STREAM
UDP
ㅡ> SOCK_DGRAM


<TCP 소켓함수>
socket()
ㅡ> 소켓 생성
ㅡ> 소켓 파일 디스크립트(인덱스) 반환

bind()
ㅡ> 소켓을 ip,포트넘버에 바인딩
ㅡ> 소켓 파일 디스크립트를 이용해서 바인딩

listen()
ㅡ> 소켓을 수동상태(passive state)로 만든다
ㅡ> 수동상태 : 클라이언트의 연결을 기다리는 상태
ㅡ> non-blocking : 함수 즉시 반환, 다른 작업 수행 가능

accept()
ㅡ> 클라이언트의 연결을 수락
ㅡ> 그 연결을 처리할 소켓을 생성
ㅡ> 생성된 소켓의 파일 디스크립터를 반환
ㅡ> blocking 상태 : 함수가 완료될 때까지 실행이 멈춤
